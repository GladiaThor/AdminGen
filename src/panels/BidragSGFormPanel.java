package panels;

import core.Applicant;
import core.Populater;
import cso.JTFAdvanced;
import java.awt.Color;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import javax.swing.JTextField;

/**
 *
 * @author Thor
 */
public class BidragSGFormPanel extends panels.JAPanel {

    String nameTFText = "Sökande";
    String amountTFText = "Sökt Belopp";
    String contactNameTFText = "Namn";
    String funcTFText = "Funktion hos sökande";
    String telTFText = "Telefonnr.";
    String mailTFText = "E-post";
    String clrnrTFText = "Clearingnr.";
    String acnrTFText = "Kontonr/postgiro/bankgiro";
    String bankTFText = "Utfärdande bank";
    Applicant app = null;
    /**
     * Creates new form bidragSGPanel
     */
    public BidragSGFormPanel() {

        initComponents();
        String timeStamp = new SimpleDateFormat("yyyy - MM - dd").format(Calendar.getInstance().getTime());
        dateLabel.setText(timeStamp);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        betalning = new javax.swing.ButtonGroup();
        compTF = new JTFAdvanced("sgName", "Sökande", true);
        amountTF = new JTFAdvanced("amount","Sökt Belopp", true);
        dateLabel = new javax.swing.JLabel();
        nameTF = new JTFAdvanced("pName", "Namn",true);
        telTF = new JTFAdvanced("pPhone", "Telefonnummer",true);
        funcTF = new JTFAdvanced("pPosition","Funktion hos sökande",true);
        mailTF = new JTFAdvanced("pMail", "E-post",true);
        clrnrTF = new JTFAdvanced("pClrNr", "Clearingnr.", false);
        acnrTF = new JTFAdvanced("pAccNr","Kontonr/postgiro/bankgiro", false);
        bankTF = new JTFAdvanced("pBank","Utfärdande bank",false);
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextField1 = new cso.JTFPnumb();

        setAutoscrolls(true);
        setMaximumSize(new java.awt.Dimension(386, 300));
        setMinimumSize(new java.awt.Dimension(386, 300));

        compTF.setForeground(new java.awt.Color(255, 153, 153));
        compTF.setText("Sökande");
        compTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        compTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        amountTF.setForeground(new java.awt.Color(255, 153, 153));
        amountTF.setText("Sökt Belopp");
        amountTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        amountTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        dateLabel.setText("2015 - 05 - 31");

        nameTF.setForeground(new java.awt.Color(255, 153, 153));
        nameTF.setText("Namn");
        nameTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        nameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        telTF.setForeground(new java.awt.Color(255, 153, 153));
        telTF.setText("Telefonnummer");
        telTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        telTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        funcTF.setForeground(new java.awt.Color(255, 153, 153));
        funcTF.setText("Funktion hos sökande");
        funcTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        funcTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        mailTF.setForeground(new java.awt.Color(255, 153, 153));
        mailTF.setText("E-post");
        mailTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        mailTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        clrnrTF.setForeground(new java.awt.Color(153, 153, 255));
        clrnrTF.setText("Clearingnr.");
        clrnrTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        clrnrTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        acnrTF.setForeground(new java.awt.Color(153, 153, 255));
        acnrTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        acnrTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        bankTF.setForeground(new java.awt.Color(153, 153, 255));
        bankTF.setText("Utfärdande bank");
        bankTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                allFocusLost(evt);
            }
        });
        bankTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                allKeyPress(evt);
            }
        });

        jLabel1.setText("Kontaktperson för äskning");

        jLabel2.setText("OBS! Belopp under 1000 SEK kan endast  betalas kontant.  ");

        jLabel3.setText("OBS! Belopp över 1000 SEK sätts endast in på bankkonto.  ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(clrnrTF, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(acnrTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bankTF, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(compTF, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountTF, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameTF)
                            .addComponent(telTF, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(funcTF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(mailTF, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(compTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(funcTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(telTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(mailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clrnrTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(acnrTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bankTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(123, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void allKeyPress(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_allKeyPress
        /**
         * String[] x = {nameTFText, amountTFText, contactNameTFText,
         * funcTFText, telTFText, mailTFText, clrnrTFText, acnrTFText,
         * bankTFText}; JTextField tf = (JTextField) evt.getComponent(); if
         * (helpers.isValInAr(tf.getText(), x)) { tf.setForeground(Color.black);
         * tf.setText(""); }
         */
        JTFAdvanced tf = (JTFAdvanced) evt.getComponent();

        tf.clear();

    }//GEN-LAST:event_allKeyPress

    /**
     * Creates a PDF ready to be filled in and returns the location
     *
     * @return
     */
    public String createPDF() {
        String source = "Templates\\Äskande mot Kvitto.PDF";
        String target = "Prints\\" + compTF.getText() + dateLabel.getText() + ".pdf";
        Populater p = new Populater();
        try {
            p.createPDF(source, target);
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        return target;
    }

    public void clearForm() {
        Component[] comp = this.getComponents();
        ArrayList<JTFAdvanced> jTFAr = new ArrayList();
        for (int i = 0; i < comp.length; i++) {
            if (comp[i].getClass().equals(new JTFAdvanced().getClass())) {
                jTFAr.add((JTFAdvanced) comp[i]);
            }
        }
        for (int i = 0; i < jTFAr.size(); i++) {
            jTFAr.get(i).forceReset();
        }

    }

    public void autoFill(String fileName) {
        Applicant app = new Applicant(fileName);
        compTF.setText(app.getComp());
        nameTF.setText(app.getName());
        funcTF.setText(app.getFunc());
        telTF.setText(app.getTel());
        mailTF.setText(app.getMail());
        clrnrTF.setText(app.getClrnr());
        acnrTF.setText(app.getAcnr());
        bankTF.setText(app.getBank());
        Component[] comp = this.getComponents();
        ArrayList<JTFAdvanced> jTFAr = new ArrayList();
        for (int i = 0; i < comp.length; i++) {
            if (comp[i].getClass().equals(new JTFAdvanced().getClass())) {
                jTFAr.add((JTFAdvanced) comp[i]);
            }
        }
        for (int i = 0; i < jTFAr.size(); i++) {
            if (jTFAr.get(i).getText().equals("N/A")) {
                jTFAr.get(i).forceReset();
            }
            if (jTFAr.get(i).getText().equals(jTFAr.get(i).defText)); else {
                jTFAr.get(i).setForeground(Color.black);
            }

        }

    }

    private void allFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_allFocusLost
        JTFAdvanced tf = (JTFAdvanced) evt.getComponent();
        tf.reset();
    }//GEN-LAST:event_allFocusLost
    
    /**
     * Sets all fields based on the applicant object input.
     *
     * @param app
     */
    private void setFields(Applicant app) {
        this.app = app;
        acnrTF.setText(this.app.getAcnr());
        bankTF.setText(this.app.getBank());
        clrnrTF.setText(this.app.getClrnr());
        compTF.setText(this.app.getComp());
        funcTF.setText(this.app.getFunc());
        nameTF.setText(this.app.getName());

    }

    private void fieldCleaner(java.awt.event.ComponentEvent evt) {
        ArrayList<String> defText = new ArrayList();
        defText.add(nameTFText);
        defText.add(amountTFText);
        defText.add(contactNameTFText);
        defText.add(funcTFText);
        defText.add(telTFText);
        defText.add(mailTFText);
        defText.add(clrnrTFText);
        defText.add(acnrTFText);
        defText.add(bankTFText);
        JTextField tf = (JTextField) evt.getComponent();
        tf.setForeground(Color.black);
        if (defText.contains(tf.getText())) {
            tf.setText("");
        } else ;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField acnrTF;
    private javax.swing.JTextField amountTF;
    private javax.swing.JTextField bankTF;
    private javax.swing.ButtonGroup betalning;
    private javax.swing.JTextField clrnrTF;
    private javax.swing.JTextField compTF;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JTextField funcTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField mailTF;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextField telTF;
    // End of variables declaration//GEN-END:variables
}
